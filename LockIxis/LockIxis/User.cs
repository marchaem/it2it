using Android.Content;
using Android.Preferences;
using Org.BouncyCastle.Asn1.Sec;
using Org.BouncyCastle.Asn1.X9;
using Org.BouncyCastle.Crypto;
using Org.BouncyCastle.Crypto.Generators;
using Org.BouncyCastle.Crypto.Parameters;
using Org.BouncyCastle.Math;
using Org.BouncyCastle.Math.EC;
using Org.BouncyCastle.Security;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using LockIxis.Ethereum;
using Nethereum.Signer;
using System.Threading.Tasks;

namespace LockIxis
{
    public class User
    {
        private LockAuthenticationService _locker = null;
        private string _username;
        private string _password;
        private AsymmetricCipherKeyPair _ACKeypair = null;
        static X9ECParameters ec = SecNamedCurves.GetByName("secp256k1");
        private HashSet<string> _locks = new HashSet<string>();
        private HashSet<string> _transactions = new HashSet<string>();
        private HashSet<string> _authorizedLocks = new HashSet<string>();
        private string _privateKey;
        private string _publicKey;

        public LockAuthenticationService Locker
        {
            get { return _locker; }
        }

        public string Password
        {
            get { return _password; }
        }

        public int NumberofLocks
        {
            get { return _locks.Count; }
        }

        public int NumberofTransactions
        {
            get { return _transactions.Count; }
        }

        public HashSet<string> Locks
        {
            get { return _locks; }
            set { _locks = value; }
        }

        public HashSet<string> AuthorizedLocks
        {
            get { return _authorizedLocks; }
            set { _authorizedLocks = value; }
        }

        public HashSet<string> Transactions
        {
            get { return _transactions; }
        }

        public string PublicKey
        {
            get
            {
                if (_publicKey == null)
                {
                    return  EthECKey.GetPublicAddress(_privateKey);
                }
                return _publicKey;
            }
            set
            {
                _publicKey = value;
            }
        }

        //add the lock in the blockChain
        public async Task AddLock(string transactionId,string lockId)
        {

            var locked = await _locker.addLock(transactionId, lockId);
            _locks.Add(lockId);
            LockIxisApp.GetPrefsEditor().PutStringSet(("userLocks"), _locks);
            LockIxisApp.GetPrefsEditor().Apply();
        }

        

        public void AddTransaction(string address)
        {
            _transactions.Add(address);
        }

        //used for our geth account
        public User()
        {
            _locker = new LockAuthenticationService("password", PrivateKey, "http://localhost:8545", "60606040526000600255341561001457600080fd5b5b60008054600160a060020a03191633600160a060020a03161790555b5b610d75806100416000396000f300606060405236156100a15763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630ddb3d2381146100a65780630f36f691146100d957806330ccebb51461010c57806356ca623e146101a35780636a0b3a091461023a5780636f77926b1461027e5780639b2f10ed146102b9578063c1fdb7cf146102f8578063cf0523d614610337578063ece4becd14610372575b600080fd5b34156100b157600080fd5b6100c5600160a060020a03600435166103ab565b604051901515815260200160405180910390f35b34156100e457600080fd5b6100c5600160a060020a0360043516610424565b604051901515815260200160405180910390f35b341561011757600080fd5b61012b600160a060020a0360043516610461565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101685780820151818401525b60200161014f565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ae57600080fd5b61012b600160a060020a0360043516610532565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101685780820151818401525b60200161014f565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561024557600080fd5b6100c5600160a060020a03600435811690602435811690604435166064351515610605565b604051901515815260200160405180910390f35b341561028957600080fd5b61029d600160a060020a0360043516610682565b604051600160a060020a03909116815260200160405180910390f35b34156102c457600080fd5b6100c5600160a060020a03600435811690602435811690604435166106a7565b604051901515815260200160405180910390f35b341561030357600080fd5b6100c5600160a060020a0360043581169060243581169060443516610744565b604051901515815260200160405180910390f35b341561034257600080fd5b61029d600160a060020a036004351661083f565b604051600160a060020a03909116815260200160405180910390f35b341561037d57600080fd5b6100c5600160a060020a0360043581169060243516610863565b604051901515815260200160405180910390f35b600160a060020a038116600090815260016020819052604082208054600160a060020a0319908116825591810180548316905560028101805490921690915560038101805474ffffffffffffffffffffffffffffffffffffffffff19169055816104186004830182610b4b565b5050600190505b919050565b600160a060020a03811660009081526001602052604090206003015474010000000000000000000000000000000000000000900460ff165b919050565b610469610b93565b6001600083600160a060020a0316600160a060020a031681526020019081526020016000206004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b505050505090505b919050565b61053a610b93565b610542610b93565b600060146040518059106105535750595b908082528060200260200182016040525b509150600090505b60148110156105fa578060130360080260020a84600160a060020a031681151561059257fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106105c157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b60010161056c565b8192505b5050919050565b6000805433600160a060020a0390811691161461062157600080fd5b600160a060020a038316151561063657600080fd5b6106768585858560408051908101604052600b81527f555345522041444445442000000000000000000000000000000000000000000060208201526108cb565b505b5b5b949350505050565b600160a060020a0380821660009081526001602081905260409091200154165b919050565b60008054839033600160a060020a0390811691161415806106e95750600160a060020a0380821660009081526001602081905260409091200154338216911614155b156106f357600080fd5b610734858585600060408051908101604052600b81527f4c4f434b20434c4f53454400000000000000000000000000000000000000000060208201526108cb565b50600191505b5b5b509392505050565b60008054839033600160a060020a0390811691161415806107865750600160a060020a0380821660009081526001602081905260409091200154338216911614155b1561079057600080fd5b600054600160a060020a03868116911614156107ed576107e7858486600160408051908101604052601881527f4c4f434b204f50454e454420425920415554484f52495459000000000000000060208201526108cb565b50610830565b610734858486600160408051908101604052601581527f4c4f434b204f50454e45442042592055534552203a000000000000000000000060208201526108cb565b505b600191505b5b5b509392505050565b600160a060020a03808216600090815260016020526040902060020154165b919050565b6000805433600160a060020a0390811691161461087f57600080fd5b6108c160008484600160408051908101604052600a81527f4c4f434b2041444445440000000000000000000000000000000000000000000060208201526108cb565b505b5b5b92915050565b60006108d5610bb7565b60c06040519081016040908152600160a060020a0333811683528981166020808501919091528982168385015290881660608401819052871515608085015260a084018790526000908152600190915220909150819081518154600160a060020a031916600160a060020a03919091161781556020820151600182018054600160a060020a031916600160a060020a03929092169190911790556040820151600282018054600160a060020a031916600160a060020a03929092169190911790556060820151600382018054600160a060020a031916600160a060020a03929092169190911790556080820151600382018054911515740100000000000000000000000000000000000000000274ff00000000000000000000000000000000000000001990921691909117905560a082015181600401908051610a1c929160200190610bf3565b50506003805490915060018101610a338382610c72565b916000526020600020906005020160005b50829081518154600160a060020a031916600160a060020a03919091161781556020820151600182018054600160a060020a031916600160a060020a03929092169190911790556040820151600282018054600160a060020a031916600160a060020a03929092169190911790556060820151600382018054600160a060020a031916600160a060020a03929092169190911790556080820151600382018054911515740100000000000000000000000000000000000000000274ff00000000000000000000000000000000000000001990921691909117905560a082015181600401908051610b38929160200190610bf3565b50505050600191505b5095945050505050565b50805460018160011615610100020316600290046000825580601f10610b715750610b8f565b601f016020900490600052602060002090810190610b8f9190610ca4565b5b50565b60206040519081016040526000815290565b60206040519081016040526000815290565b60c0604051908101604090815260008083526020830181905290820181905260608201819052608082015260a08101610bee610b93565b905290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c3457805160ff1916838001178555610c61565b82800160010185558215610c61579182015b82811115610c61578251825591602001919060010190610c46565b5b50610c6e929150610ca4565b5090565b815481835581811511610c9e57600502816005028360005260206000209182019101610c9e9190610cd7565b5b505050565b610cc291905b80821115610c6e5760008155600101610caa565b5090565b90565b60206040519081016040526000815290565b610cc291905b80821115610c6e578054600160a060020a0319908116825560018201805482169055600282018054909116905560038101805474ffffffffffffffffffffffffffffffffffffffffff191690556000610d396004830182610b4b565b50600501610cdd565b5090565b905600a165627a7a72305820d56b9118a97b3161a82ea4be9d01fd82f27b631500897bf46455da49ce306b8b0029");
        }

        //used for our geth account
        public User(string username, string password)
        {
            _locker = new LockAuthenticationService(password,PrivateKey,"http://localhost:8545", "60606040526000600255341561001457600080fd5b5b60008054600160a060020a03191633600160a060020a03161790555b5b610d75806100416000396000f300606060405236156100a15763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416630ddb3d2381146100a65780630f36f691146100d957806330ccebb51461010c57806356ca623e146101a35780636a0b3a091461023a5780636f77926b1461027e5780639b2f10ed146102b9578063c1fdb7cf146102f8578063cf0523d614610337578063ece4becd14610372575b600080fd5b34156100b157600080fd5b6100c5600160a060020a03600435166103ab565b604051901515815260200160405180910390f35b34156100e457600080fd5b6100c5600160a060020a0360043516610424565b604051901515815260200160405180910390f35b341561011757600080fd5b61012b600160a060020a0360043516610461565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101685780820151818401525b60200161014f565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101ae57600080fd5b61012b600160a060020a0360043516610532565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101685780820151818401525b60200161014f565b50505050905090810190601f1680156101955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561024557600080fd5b6100c5600160a060020a03600435811690602435811690604435166064351515610605565b604051901515815260200160405180910390f35b341561028957600080fd5b61029d600160a060020a0360043516610682565b604051600160a060020a03909116815260200160405180910390f35b34156102c457600080fd5b6100c5600160a060020a03600435811690602435811690604435166106a7565b604051901515815260200160405180910390f35b341561030357600080fd5b6100c5600160a060020a0360043581169060243581169060443516610744565b604051901515815260200160405180910390f35b341561034257600080fd5b61029d600160a060020a036004351661083f565b604051600160a060020a03909116815260200160405180910390f35b341561037d57600080fd5b6100c5600160a060020a0360043581169060243516610863565b604051901515815260200160405180910390f35b600160a060020a038116600090815260016020819052604082208054600160a060020a0319908116825591810180548316905560028101805490921690915560038101805474ffffffffffffffffffffffffffffffffffffffffff19169055816104186004830182610b4b565b5050600190505b919050565b600160a060020a03811660009081526001602052604090206003015474010000000000000000000000000000000000000000900460ff165b919050565b610469610b93565b6001600083600160a060020a0316600160a060020a031681526020019081526020016000206004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b505050505090505b919050565b61053a610b93565b610542610b93565b600060146040518059106105535750595b908082528060200260200182016040525b509150600090505b60148110156105fa578060130360080260020a84600160a060020a031681151561059257fe5b047f0100000000000000000000000000000000000000000000000000000000000000028282815181106105c157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b60010161056c565b8192505b5050919050565b6000805433600160a060020a0390811691161461062157600080fd5b600160a060020a038316151561063657600080fd5b6106768585858560408051908101604052600b81527f555345522041444445442000000000000000000000000000000000000000000060208201526108cb565b505b5b5b949350505050565b600160a060020a0380821660009081526001602081905260409091200154165b919050565b60008054839033600160a060020a0390811691161415806106e95750600160a060020a0380821660009081526001602081905260409091200154338216911614155b156106f357600080fd5b610734858585600060408051908101604052600b81527f4c4f434b20434c4f53454400000000000000000000000000000000000000000060208201526108cb565b50600191505b5b5b509392505050565b60008054839033600160a060020a0390811691161415806107865750600160a060020a0380821660009081526001602081905260409091200154338216911614155b1561079057600080fd5b600054600160a060020a03868116911614156107ed576107e7858486600160408051908101604052601881527f4c4f434b204f50454e454420425920415554484f52495459000000000000000060208201526108cb565b50610830565b610734858486600160408051908101604052601581527f4c4f434b204f50454e45442042592055534552203a000000000000000000000060208201526108cb565b505b600191505b5b5b509392505050565b600160a060020a03808216600090815260016020526040902060020154165b919050565b6000805433600160a060020a0390811691161461087f57600080fd5b6108c160008484600160408051908101604052600a81527f4c4f434b2041444445440000000000000000000000000000000000000000000060208201526108cb565b505b5b5b92915050565b60006108d5610bb7565b60c06040519081016040908152600160a060020a0333811683528981166020808501919091528982168385015290881660608401819052871515608085015260a084018790526000908152600190915220909150819081518154600160a060020a031916600160a060020a03919091161781556020820151600182018054600160a060020a031916600160a060020a03929092169190911790556040820151600282018054600160a060020a031916600160a060020a03929092169190911790556060820151600382018054600160a060020a031916600160a060020a03929092169190911790556080820151600382018054911515740100000000000000000000000000000000000000000274ff00000000000000000000000000000000000000001990921691909117905560a082015181600401908051610a1c929160200190610bf3565b50506003805490915060018101610a338382610c72565b916000526020600020906005020160005b50829081518154600160a060020a031916600160a060020a03919091161781556020820151600182018054600160a060020a031916600160a060020a03929092169190911790556040820151600282018054600160a060020a031916600160a060020a03929092169190911790556060820151600382018054600160a060020a031916600160a060020a03929092169190911790556080820151600382018054911515740100000000000000000000000000000000000000000274ff00000000000000000000000000000000000000001990921691909117905560a082015181600401908051610b38929160200190610bf3565b50505050600191505b5095945050505050565b50805460018160011615610100020316600290046000825580601f10610b715750610b8f565b601f016020900490600052602060002090810190610b8f9190610ca4565b5b50565b60206040519081016040526000815290565b60206040519081016040526000815290565b60c0604051908101604090815260008083526020830181905290820181905260608201819052608082015260a08101610bee610b93565b905290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610c3457805160ff1916838001178555610c61565b82800160010185558215610c61579182015b82811115610c61578251825591602001919060010190610c46565b5b50610c6e929150610ca4565b5090565b815481835581811511610c9e57600502816005028360005260206000209182019101610c9e9190610cd7565b5b505050565b610cc291905b80821115610c6e5760008155600101610caa565b5090565b90565b60206040519081016040526000815290565b610cc291905b80821115610c6e578054600160a060020a0319908116825560018201805482169055600282018054909116905560038101805474ffffffffffffffffffffffffffffffffffffffffff191690556000610d396004830182610b4b565b50600501610cdd565b5090565b905600a165627a7a72305820d56b9118a97b3161a82ea4be9d01fd82f27b631500897bf46455da49ce306b8b0029");
            _username = username;
            _password = password;
        }

        public string PrivateKey
        {
            get
            {
                return _privateKey;
            }
            set
            {
                _privateKey = value;
            }
        }

        public string Name
        {
            get { return _username; }
            set { _username = value; }
        }

        public void InitialiseCryptoParameters(string qrCode_privateKey)
        {
            //"0x" + EthECKey.GetPublicAddress(qrCode_privateKey)
            //var ethECKey = new EthECKey(qrCode_privateKey);
            _privateKey = qrCode_privateKey;
        }

        public bool IsSet
        {
            get { return Name.Length > 0 && _ACKeypair != null; }
        }
    }
}
